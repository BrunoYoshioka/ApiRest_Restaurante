package com.restaurantes.apirest.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.restaurante.jdbc.CNXJDBC;
import com.restaurantes.apirest.models.Restaurante;

public class RestauranteDAO {
	private final String SQL_INSERE_RESTAURANTE= "INSERT INTO \"PUBLIC\".\"RESTAURANTES\"(\"NOME\" ) VALUES (?);";
	private final String SQL_ALTERA_RESTAURANTE= "UPDATE RESTAURANTES SET NOME=? WHERE ID=?;";
	private final String SQL_EXCLUI_RESTAURANTE= "DELETE FROM RESTAURANTES WHERE ID=?;";
	private final String SQL_SELECIONA_RESTAURANTE= "SELECT * FROM RESTAURANTES";
	
	private PreparedStatement pst = null;
	
	/**
	 * O método inserir quando encontrado recebe um objeto
	 * do tipo usuário lá no models que é a entidade
	 * @param umRestaurante
	 * @return
	 */
	public boolean inserirRestaurante(Restaurante umRestaurante) {
		boolean ret = false;
		/**
		 * Essa linha chama o método conectar.
		 */
		Connection conn = CNXJDBC.conectar();
		try {
			pst = conn.prepareStatement(SQL_INSERE_RESTAURANTE);
			pst.setString(1, umRestaurante.getNome());
			// Executa a instrução SQL que está no prepareStatement
			// objeto, que pode ser qualquer tipo de instrução SQL.
			ret = pst.execute();
			pst.close();
			CNXJDBC.fecharCNX();
			System.out.println("Restaurante cadastrado com sucesso!");
		}catch (SQLException e) {
			System.out.println("Erro ao  executar o Statement "+e.toString());
		}
		return ret;
	}
	
	/**
	 * Método para listar todos os restaurantes no banco de dados
	 * @return
	 */
	public ArrayList<Restaurante> listarTodosRestaurantes(){
		// ArrayList criada denominado listaDeRestaurantes
		ArrayList<Restaurante> listaDeRestaurantes = new ArrayList<Restaurante>();
		// Conecta o banco
		Connection conn = CNXJDBC.conectar();
		Restaurante umRestaurante;
		// tente
		try {
			pst = conn.prepareStatement(SQL_SELECIONA_RESTAURANTE);
			// Executa a instrução SQL que está no prepareStatement
			// objeto e retorna o ResultSet objeto gerado pela consulta
			ResultSet rs = pst.executeQuery();
			// Percorro este ResultSet em um laço
			while(rs.next()) {
				umRestaurante = new Restaurante();
				umRestaurante.setId(rs.getInt("ID"));
				umRestaurante.setNome(rs.getString("NOME"));
				listaDeRestaurantes.add(umRestaurante);
			}
			rs.close();	// Fechar o ResultSet
			pst.close();	// Fechar o prepareStatement
			CNXJDBC.fecharCNX(); // Fechar a conexão do banco
		}catch (SQLException e) {
			System.out.println("Erro ao executar o Statement "+e.toString());
		}
		return listaDeRestaurantes;
	}
	
	public boolean alterarRestaurante(Restaurante umRestaurante) {
		boolean ret = false;
		Connection conn = CNXJDBC.conectar();
		try {
			pst = conn.prepareStatement(SQL_ALTERA_RESTAURANTE);
			pst.setString(1, umRestaurante.getNome());
			pst.setLong(2, umRestaurante.getId());
			ret = pst.execute();
			pst.close();
			CNXJDBC.fecharCNX();
			System.out.println("Restaurante alterado com sucesso!");
		}catch (SQLException e) {
			System.out.println("Erro ao  executar o Statement "+e.toString());
		}
		return ret;
	}
	
	public boolean excluirRestaurante(Restaurante umRestaurante) {
		boolean ret = false;
		Connection conn = CNXJDBC.conectar();
		try {
			pst = conn.prepareStatement(SQL_EXCLUI_RESTAURANTE);
			pst.setLong(1, umRestaurante.getId());
			ret = pst.execute();
			pst.close();
			CNXJDBC.fecharCNX();
			System.out.println("Restaurante excluído com sucesso!");
		}catch (SQLException e) {
			System.out.println("Erro ao  executar o Statement "+e.toString());
		}
		return ret;
	}
}
